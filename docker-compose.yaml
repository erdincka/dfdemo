services:
  mapr:
    platform: linux/amd64
    image: local/mapr:0.1.15
    build:
      context: ./mapr
      dockerfile: Dockerfile
      args:
        # - MAPR_REPO=https://package.ezmeral.hpe.com/releases/
        - MAPR_REPO=http://repo.kayalab.uk/mapr/ # this is my local repo, default is the line above
        # Don't change these unless you are using a newer sandbox image
        - UBUNTU_VERSION=22.04
        - NIFI_VERSION=1.28.0
        - MYSQL_CONNECTOR_VERSION=9.3.0
      platforms:
        - "linux/amd64"
    container_name: mapr
    hostname: mapr
    restart: unless-stopped
    environment:
      - clusterName=dfab.io
      - isSecure=true
      - MAPR_TZ=Europe/London
      - TZ=Europe/London
      # CHANGE THIS WITH YOUR DOCKER HOSTNAME/FQDN
      - NIFI_WEB_PROXY_HOST=docker.kayalab.uk:12443
      - NIFI_VERSION=1.28.0
      - NIFI_USER=admin
      # Following password needs to be min 12 chars
      - NIFI_PASSWORD=Admin123.Admin123.
    ports:
      # - "8501:8501"  ## if there is an app UI
      # - "9443:9443"  ## optional for Installer UI
      - "8443:8443"  ## optional for MCS
      # - "2222:22"  ## optional for SSH
      - "12443:12443" ## optional for NiFi
      - "8047:8047" ## optional for Drill
      - "8780:8780" ## optional for Airflow
      - "8888:8888" ## optional for Hue
      - "3000:3000" ## optional for Grafana
    privileged: true
    cap_add:
      - SYS_ADMIN
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      # - ./wgetrc:/root/.wgetrc:ro
      # - ./mysql.cnf:/etc/mysql/conf.d/client.cnf

  app:
    platform: linux/amd64
    image: local/app:0.1.12
    build:
      context: ./app
      dockerfile: Dockerfile
      args:
        - MAPR_REPO=http://repo.kayalab.uk/mapr/ # this is my local repo, delete for default
      platforms:
        - "linux/amd64"
    container_name: app
    hostname: app
    restart: unless-stopped
    depends_on:
      mapr:
        condition: service_healthy
      db:
        condition: service_healthy
        restart: true
    ports:
      - "8501:8501"  ## required to use app UI
    ## required to mount nfs
    privileged: true
    cap_add:
      - SYS_ADMIN
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      # - ./wgetrc:/root/.wgetrc:ro
      # - ./mysql.cnf:/etc/mysql/conf.d/client.cnf

  # nfs:
  #   platform: linux/amd64
  #   image: itsthenetwork/nfs-server-alpine:latest
  #   container_name: nfs
  #   hostname: nfs
  #   restart: unless-stopped
  #   environment:
  #     - SHARED_DIRECTORY=/share
  #   ports: []
  #     # - "2049:2049" # conflict with the host?
  #   privileged: true
  #   volumes:
  #     - /etc/timezone:/etc/timezone:ro
  #     - /etc/localtime:/etc/localtime:ro
  #     - nfs-data:/share:rw

  db:
    platform: linux/amd64
    image: mysql/mysql-server:8.0
    container_name: db
    hostname: db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: 'demodb'
      MYSQL_USER: 'mysql'
      MYSQL_PASSWORD: 'Admin123.'
      MYSQL_ROOT_PASSWORD: 'Admin123.'
    volumes:
      - mysql:/var/lib/mysql
      - ./mysqld.cnf:/etc/mysql/conf.d/mysqld.cnf

  # minio:
  #   platform: linux/amd64
  #   image: minio/minio:latest
  #   container_name: minio
  #   hostname: minio
  #   restart: unless-stopped
  #   environment:
  #     - MINIO_ROOT_USER='admin'
  #     - MINIO_ROOT_PASSWORD='Admin123.'
  #   # ports:
  #   #   - "9000:9000"
  #   volumes:
  #     - /etc/timezone:/etc/timezone:ro
  #     - /etc/localtime:/etc/localtime:ro
  #     - minio-data:/data
  #   command: server /data

volumes:
  mysql: {}
  minio-data: {}
  nfs-data: {}